name: 🔧 Fix Missing Service Repositories

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'create'
        type: choice
        options:
          - create
          - recreate

jobs:
  fix:
    name: Fix Missing Repositories
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout deployment repo
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.VPS_PORT }} ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "echo '✅ SSH connection successful' && whoami && date"

      - name: Copy quick fix script
        run: |
          scp -P ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            quick-fix-missing-repos.sh \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/

      - name: Execute quick fix
        run: |
          ssh -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "chmod +x /tmp/quick-fix-missing-repos.sh && /tmp/quick-fix-missing-repos.sh"

      - name: Verify repositories created
        run: |
          ssh -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          
          echo "🔍 Verifying created repositories:"
          echo ""
          
          SERVICES=("auth-service" "user-service" "chat-service" "event-service" "shared-service" "splitz-service")
          
          for service in "${SERVICES[@]}"; do
            if [ -d "/opt/letzgo/services/$service" ]; then
              echo "✅ $service: Repository exists"
              
              # Check if it has the required files
              if [ -f "/opt/letzgo/services/$service/package.json" ]; then
                echo "  📦 package.json: ✅"
              else
                echo "  📦 package.json: ❌"
              fi
              
              if [ -f "/opt/letzgo/services/$service/Dockerfile" ]; then
                echo "  🐳 Dockerfile: ✅"
              else
                echo "  🐳 Dockerfile: ❌"
              fi
              
              if [ -f "/opt/letzgo/services/$service/src/app.js" ]; then
                echo "  📄 src/app.js: ✅"
              else
                echo "  📄 src/app.js: ❌"
              fi
              
            else
              echo "❌ $service: Repository missing"
            fi
            echo ""
          done
          
          echo "🎯 Quick fix verification completed"
          EOF

      - name: Test service deployment
        run: |
          echo "🚀 Testing service deployment with created repositories..."
          ssh -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "cd /opt/letzgo && ls -la services/ && echo 'Repositories are ready for deployment!'"

      - name: Cleanup SSH
        if: always()
        run: rm -f ~/.ssh/id_rsa
