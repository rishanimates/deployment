name: ðŸš€ Deploy Services

on:
  workflow_dispatch:
    inputs:
      services:
        description: 'Services to deploy: auth-service,user-service,chat-service,event-service,shared-service,splitz-service or "all"'
        required: false
        default: 'all'
        type: string
      branch:
        description: 'Branch to deploy from'
        required: false
        default: 'main'
        type: choice
        options:
          - main
          - develop
          - staging
      force_rebuild:
        description: 'Force rebuild Docker images'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    name: Deploy Services
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.VPS_PORT }} ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "echo 'âœ… SSH connection successful' && whoami && date"

      - name: Copy services script
        run: |
          scp -P ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            deploy-services.sh \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/

      - name: Execute services deployment
        run: |
          ssh -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "chmod +x /tmp/deploy-services.sh && /tmp/deploy-services.sh '${{ github.event.inputs.services }}' '${{ github.event.inputs.branch }}' ${{ github.event.inputs.force_rebuild && '--force-rebuild' || '' }}"

      - name: Cleanup SSH
        if: always()
        run: rm -f ~/.ssh/id_rsa
